server {
	listen 8080 default_server;

	# Allow connections only from 172.30.32.2 (HA Ingress)
	# allow 172.30.32.2; deny all;
	# Also restrict direct access to Pi-hole webserver? webserver.acl="+127.0.0.1,+[::1]"

	# Disable access logging
	access_log off;

	# Redirect / requests to Pi-hole's dashboard --> /admin/
	location = / {
		# Does not work; Nginx prepends its own hostname and port to the redirect path
		# return 302 admin/;

		# Lua is used to perform an HTTP redirect to ensure that no hostname or port is prepended
		content_by_lua_block {
			local ingress_path = ngx.var.http_x_ingress_path or ""

			if ingress_path == "" then
				ngx.status = 400 -- Bad Request
				ngx.header["Content-Type"] = "text/plain"
				ngx.say("Error: HTTP header 'X-Ingress-Path' is missing.")
				return ngx.exit(400)
    			end

			ngx.header["Location"] = ingress_path .. "/admin/"
			ngx.exit(302)
		}
	}


    	location / {
		# Pass requests to Pi-hole
		proxy_pass http://localhost:80/;

		# Redirects are not used; Keeping for possible future usage
		# absolute_redirect off;
		# proxy_redirect ~^(/admin.*) $http_x_ingress_path$1;

		# Overwrite "X-Frame-Options: DENY"; required for HA Ingress
		proxy_hide_header X-Frame-Options;
		add_header X-Frame-Options "SAMEORIGIN";

		# Enables string replacement in responses with the specified MIME types in addition to "text/html"
		sub_filter_types application/javascript; #text/css

		# Indicates whether to look for each string to replace once or repeatedly
		sub_filter_once off;

		# https://developers.home-assistant.io/docs/add-ons/presentation/#ingress
		# Replace webserver.paths.prefix with HA Ingress token
		sub_filter '/live-long-and-prosper' '$http_x_ingress_path';

		# TODO Temporary fix until https://github.com/pi-hole/web/pull/3370 is merged and released
		sub_filter '/admin/vendor/icheck/' '$http_x_ingress_path/admin/vendor/icheck/';
	}
}
